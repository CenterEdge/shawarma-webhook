# This example configuration demonstrates a ConfigMap with a custom sidecar configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: shawarma-sidecars
  namespace: kube-system
data:
  sidecars.yaml: |
    sidecars:
    - name: shawarma
      sidecar:
        containers:
        - name: shawarma
          image: "|SHAWARMA_IMAGE|"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
          env:
            - name: LOG_LEVEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/log-level']
            - name: SHAWARMA_SERVICE
              # References service to monitor
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/service-name']
            - name: SHAWARMA_SERVICE_LABELS
              # References service to monitor
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/service-labels']
            - name: SHAWARMA_URL
              # Will POST state to this URL as pod is attached/detached from the service
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/state-url']
            - name: SHAWARMA_LISTEN_PORT
              # Will listen for HTTP GET of state on this port, localhost traffic only
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/listen-port']
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 25m
              memory: 64Mi
            limits:
              cpu: 25m
              memory: 64Mi
    - name: shawarma-withtoken
      sidecar:
        volumes:
        - name: shawarma-token
          secret:
            defaultMode: 420
            secretName: "|SHAWARMA_TOKEN_NAME|"
        containers:
        - name: shawarma
          image: "|SHAWARMA_IMAGE|"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: shawarma-token
            readOnly: true
          env:
            - name: LOG_LEVEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/log-level']
            - name: SHAWARMA_SERVICE
              # References service to monitor
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/service-name']
            - name: SHAWARMA_SERVICE_LABELS
              # References service to monitor
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/service-labels']
            - name: SHAWARMA_URL
              # Will POST state to this URL as pod is attached/detached from the service
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/state-url']
            - name: SHAWARMA_LISTEN_PORT
              # Will listen for HTTP GET of state on this port, localhost traffic only
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['shawarma.centeredge.io/listen-port']
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 25m
              memory: 64Mi
            limits:
              cpu: 25m
              memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shawarma-webhook
  namespace: kube-system
  labels:
    k8s-app: shawarma-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: shawarma-webhook
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: shawarma-webhook
    spec:
      serviceAccountName: shawarma-webhook
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
      volumes:
      - name: secrets
        secret:
          secretName: shawarma-webhook-certificate
      - name: sidecars
        configMap:
          name: shawarma-sidecars
      containers:
      - name: shawarma-webhook
        imagePullPolicy: IfNotPresent
        image: centeredge/shawarma-webhook:test
        securityContext:
          allowPrivilegeEscalation: false
        args:
        - --config
        - /etc/shawarma-webhook/sidecars/sidecars.yaml
        env:
        - name: LOG_LEVEL
          value: debug
        - name: SHAWARMA_IMAGE
          value: centeredge/shawarma:2.0.0-beta001
        ports:
        - name: https
          containerPort: 8443
        volumeMounts:
        - name: secrets
          mountPath: /etc/shawarma-webhook/certs
          readOnly: true
        - name: sidecars
          mountPath: /etc/shawarma-webhook/sidecars
          readOnly: true
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /health
            port: https
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi
